{
  "swagger": "2.0",
  "info": {
    "title": "BCR API",
    "version": "1.0",
    "contact": {
      "name": "Fikri Rahmat Nurhidayat",
      "url": "https://github.com/fnurhidayat",
      "email": "fnurhidayat@binar.co.id"
    }
  },
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Cars"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Retrieve access tokens",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreLoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "Register",
        "description": "Create new user",
        "operationId": "register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreRegisterRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/whoami": {
      "get": {
        "summary": "Who Am I",
        "description": "Retrieve current user info",
        "operationId": "whoami",
        "security": [ { "BearerTokenAuth": [] } ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreWhoAmIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/cars": {
      "get": {
        "summary": "List Cars",
        "description": "Retrieve list of cars",
        "operationId": "listCars",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreListCarsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Cars"
        ]
      },
      "post": {
        "summary": "Create Car",
        "description": "Add new car on the database",
        "operationId": "createCar",
        "security": [ { "BearerTokenAuth": [] } ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreCar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreCreateCarRequest"
            }
          }
        ],
        "tags": [
          "Cars"
        ]
      }
    },
    "/v1/cars/{id}": {
      "get": {
        "summary": "Get Car",
        "description": "Retrieve car detail",
        "operationId": "getCar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreCar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Cars"
        ]
      },
      "delete": {
        "summary": "Delete Car",
        "description": "Remove existing car by id",
        "operationId": "deleteCar",
        "security": [ { "BearerTokenAuth": [] } ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "Cars"
        ]
      },
      "put": {
        "summary": "Update Car",
        "description": "Change car information",
        "operationId": "updateCar",
        "security": [ { "BearerTokenAuth": [] } ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreCar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "integer",
                  "format": "int64"
                },
                "image": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Cars"
        ]
      }
    },
    "/v1/cars/{id}/rent": {
      "post": {
        "summary": "Rent Car",
        "description": "Rent a car",
        "operationId": "rentCar",
        "security": [ { "BearerTokenAuth": [] } ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreUserCar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rentStartedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "rentEndedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "tags": [
          "Cars"
        ]
      }
    }
  },
  "definitions": {
    "ListCarsResponseMetaListCars": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/MetaListCarsResponsePagination"
        }
      }
    },
    "MetaListCarsResponsePagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "pageCount": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "coreCar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "usercar": {
          "$ref": "#/definitions/coreUserCar"
        }
      }
    },
    "coreCreateCarRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        },
        "size": {
          "type": "string"
        }
      }
    },
    "coreListCarsResponse": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/ListCarsResponseMetaListCars"
        },
        "cars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreCar"
          }
        }
      }
    },
    "coreLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "coreLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "coreRegisterRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "coreRegisterResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "coreUserCar": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "carId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "rentStartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "rentEndedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "coreWhoAmIResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerTokenAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  }
}
